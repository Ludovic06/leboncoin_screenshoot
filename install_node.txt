sudo apt-get install nodejs npm
sudo npm config set registry http://registry.npmjs.org/
sudo npm install express
sudo npm install body-parser
sudo npm install mkdirp
sudo npm install supervisor -g

sudo npm install -g nodemon
sudo vi /usr/local/lib/node_modules/nodemon/bin/nodemon.js

sudo ln -s /usr/bin/nodejs /usr/local/bin/node


nodemon ./ws.js



pour tester :
http://127.0.0.1:8080/screen_shoot/url=urlencodedurl

ex:
http://85.169.64.54:8080/screen_shoot/url=http%3A%2F%2Fwww.leboncoin.fr%2Fventes_immobilieres%2F708072402.htm%3Fca%3D21_s



OS :
http://linux-sunxi.org/Sunxi-tools
http://thinkonbytes.blogspot.fr/2013/11/how-install-ubuntu-into-cubieboard-and.html

Pour phantomjs :

apt-get update
apt-get install phantomjs


sinon 

wget https://launchpad.net/ubuntu/+source/phantomjs/1.4.0+dfsg-1/+build/3077541/+files/phantomjs_1.4.0%2Bdfsg-1_armhf.deb

sudo apt-get install libqtwebkit
sudo dpkg -i phantomjs*.deb




pour l'erreur :
 [WARNING] phantomjs: cannot connect to X server
il faut une version de phantomjs > 1.4
sinon il faut install xvbf
ssh linaro@IP -X

ajout des locales: 
sudo apt-get install language-pack-en-base
sudo dpkg-reconfigure locales
locale -a



pour le ~/.bashrc :

 parse_git_branch() {
   git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
 }

 shorten_path(){
   x=${1}
   len=${#x}
   max_len=$2

   if [ $len -gt $max_len ]
   then
       pos=()
       for ((i=0;i<len;i++))
       do
           if [ "${x:i:1}" == "/" ]
           then
               pos=(${pos[@]} $i)
           fi
       done
       pos=(${pos[@]} $len)

       i=0
       while [ $((len-pos[i])) -gt $((max_len-3)) ]
       do
           i=$((i+1))
       done

       if [ ${pos[i]} == 0 ]
       then
           echo ${x}

       elif [ ${pos[i]} == $len ]
       then
           echo ...${x:((len-max_len+3))}
       else
           echo ...${x:pos[i]}
       fi
   else
       echo ${x}
   fi
 }

 PS1='$([ $? -ne 0 ] && echo -e "\[\033[01;31m\]:[\[\e[0m\]" || echo -e "\[\033[01;32m\]:]\[\e[0m\]") \[\033[1;32m\]\u@\h\[\033[1;34m\] $(shorten_path "${PWD}" 50)\[\033[1;36m\]$(parse_git_branch) \[\033[1;34m\]:\[\033[0m\] '

umask 0002

   git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
 }

 shorten_path(){
   x=${1}
   len=${#x}
   max_len=$2

   if [ $len -gt $max_len ]
   then
       pos=()
       for ((i=0;i<len;i++))
       do
           if [ "${x:i:1}" == "/" ]
           then
               pos=(${pos[@]} $i)
           fi
       done
       pos=(${pos[@]} $len)

       i=0
       while [ $((len-pos[i])) -gt $((max_len-3)) ]
       do
           i=$((i+1))
       done

       if [ ${pos[i]} == 0 ]
       then
           echo ${x}

       elif [ ${pos[i]} == $len ]
       then
           echo ...${x:((len-max_len+3))}
       else
           echo ...${x:pos[i]}
       fi
   else
       echo ${x}
   fi
 }

 PS1='$([ $? -ne 0 ] && echo -e "\[\033[01;31m\]:[\[\e[0m\]" || echo -e "\[\033[01;32m\]:]\[\e[0m\]") \[\033[1;32m\]\u@\h\[\033[1;34m\] $(shorten_path "${PWD}" 50)\[\033[1;36m\]$(parse_git_branch) \[\033[1;34m\]:\[\033[0m\] '

umask 0002

